#####################################
### emergency_factory_conversion ####
#####################################

#This is going to give misleading and ugly tooltips. Making it nice will take effort. T_ODO_WTT_CD make nice or ignore and remove comment. Easiest solution is just making a custom tooltip that says "5 civilian factories will be converted to military factories" and ignore telling the player the states where it will happen.

replace_civ_with_arms_factories = {

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}
}

#Country scope
ROOT_inherit_current_scope_wars_effect = {
	custom_effect_tooltip = ROOT_inherit_current_scope_wars_effect
	hidden_effect = {
		every_country = {
			limit = {
				has_defensive_war_with = PREV
			}
			ROOT = { declare_war_on = { target = PREV type = annex_everything } }
		}
		every_country = {
			limit = {
				has_offensive_war_with = PREV
			}
			declare_war_on = { target = ROOT type = annex_everything }
		}
	}
}

print_variable_log_effect = {
	print_variables = {
		file = variables_yug
		append = yes
	}
}

remove_naval_treaty_effect = {
	if = {
		limit = {
			has_idea = MTG_naval_treaty_adherent
		}
		remove_ideas = MTG_naval_treaty_adherent
	}
	else_if = {
		limit = {
			has_idea = MTG_naval_treaty_cheating
		}
		remove_ideas = MTG_naval_treaty_cheating
	}
	else_if = {
		limit = {
			has_idea = MTG_naval_treaty_adherent_reduced
		}
		remove_ideas = MTG_naval_treaty_adherent_reduced
	}
	else_if = {
		limit = {
			has_idea = MTG_naval_treaty_cheating_reduced
		}
		remove_ideas = MTG_naval_treaty_cheating_reduced
	}
	set_country_flag = MTG_naval_treaty_abandoned
}

civil_war_anti_exploiter_punitive_action = {
}


remove_from_allowed_party = {
	if = {
		limit = { has_government = fascism }
		set_temp_variable = { allowed_party_fascism = 0 }
	}
	else_if = {
		limit = { has_government = democratic }
		set_temp_variable = { allowed_party_democratic = 0 }
	}
	else_if = {
		limit = { has_government = communism }
		set_temp_variable = { allowed_party_communism = 0 }
	}
	else_if = {
		limit = { has_government = neutrality }
		set_temp_variable = { allowed_party_neutrality = 0 }
	}
}

abandon_colony_tag = {

}

upgrade_economy_law = {
	if = {
		limit = {
			has_idea = civilian_economy
		}
		add_ideas = low_economic_mobilisation
	}
	else_if = {
		limit = {
			has_idea = low_economic_mobilisation
		}
		add_ideas = partial_economic_mobilisation
	}
	else_if = {
		limit = {
			has_idea = partial_economic_mobilisation
		}
		add_ideas = war_economy
	}
	else_if = {
		limit = {
			has_idea = war_economy
		}
		add_ideas = tot_economic_mobilisation
	}
	else = {
		add_political_power = 150
	}
}


join_allies_effect = {

}


on_daily = {

}

#on_daily_USA = {
#	# you can specify an on daily action for a specific country
#}


remove_any_country_role_from_character = { #Expected to be used inside the character scope
	#log = "I am [THIS.GetName]"
	if = {
		limit = {
			is_character_slot = army_chief
		}
		remove_advisor_role = { slot = army_chief }
	}
	if = {
		limit = {
			is_character_slot = navy_chief
		}
		remove_advisor_role = { slot = navy_chief }
	}
	if = {
		limit = {
			is_character_slot = high_command
		}
		remove_advisor_role = { slot = high_command }
	}
	if = {
		limit = {
			is_character_slot = theorist
		}
		remove_advisor_role = { slot = theorist }
	}
	if = {
		limit = {
			is_character_slot = political_advisor
		}
		remove_advisor_role = { slot = political_advisor }
	}
}

### Paratroopers
SF_PARA_sabotage_effect = { #When changing this, update the research tooltip
	damage_building = {
		type = infrastructure
		damage = 2
	}
	damage_building = {
		type = industrial_complex
		damage = 1
	}
	damage_building = {
		type = arms_factory
		damage = 1
	}
	set_state_flag = {
		flag = para_drop_effect
		days = 30
	}
}

SF_PARA_combat_effect = { #When changing this, update the research tooltip
	every_state_division = {
		limit = { 
			OWNER = { has_war_with = FROM }
		}
		set_unit_organization = 0.50
	}
	set_state_flag = {
		flag = para_drop_effect
		days = 30
	}
}

### Muuuurrrriiinnnnneeeeessssss
SF_marine_demoliton_effect = { #When changing this, update the research tooltip
	damage_building = {
		type = radar_station
		damage = 1
	}
	damage_building = {
		type = naval_base
		damage = 1
	}
	damage_building = {
		type = dockyard
		damage = 1
	}
	damage_building = {
		type = fuel_silo
		damage = 1
	}
	set_state_flag = {
		flag = marines_commando_effect
		days = 30
	}
}

###########################################################################################
###########################################################################################
###########################################################################################

							########    ###       ###    ######## 
							   ##      ## ##     ## ##      ##    
							   ##     ##   ##   ##   ##     ##    
							   ##    ##     ## ##     ##    ##    
							   ##    ######### #########    ##    
							   ##    ##     ## ##     ##    ##    
							   ##    ##     ## ##     ##    ##    

###########################################################################################
###########################################################################################
###########################################################################################


# The idea is that you can use these effects to store the party popularities (and, if desired, the ruling party) when puppeting or possibly when starting civil wars, and then use the "restore" effects to reset it after the puppeting has happened, so that you don't have to use the overlord's ideology if you don't want to. 

get_current_ruling_party = {
	set_variable = { ROOT.ruling_ideology_before_change = ROOT.current_party_ideology_group }
}

restore_ruling_party = {
	ROOT = {
		set_politics = {
			ruling_party = var:ROOT.ruling_ideology_before_change
		}
	}
}


#Upgrades state cat to the next valid level. Called from state scope
increase_state_category = {
	if = {
		limit = {
			has_state_category = tiny_island
		}
		set_state_category = small_island
		effect_tooltip = {
			add_extra_state_shared_building_slots = 1
		}
	}

	if = {
		limit = {
			OR = {
				has_state_category = wasteland
				has_state_category = enclave
			}
		}
		set_state_category = pastoral
		effect_tooltip = {
			add_extra_state_shared_building_slots = 1
		}
	}
	else_if = {
		limit = {
			has_state_category = pastoral
		}
		set_state_category = rural
		effect_tooltip = {
			add_extra_state_shared_building_slots = 1
		}
	}
	else_if = {
		limit = {
			has_state_category = rural
		}
		set_state_category = town
		effect_tooltip = {
			add_extra_state_shared_building_slots = 2
		}
	}
	else_if = {
		limit = {
			has_state_category = town
		}
		set_state_category = large_town
		effect_tooltip = {
			add_extra_state_shared_building_slots = 1
		}
	}
	else_if = {
		limit = {
			has_state_category = large_town
		}
		set_state_category = city
		effect_tooltip = {
			add_extra_state_shared_building_slots = 1
		}
	}
	else_if = {
		limit = {
			has_state_category = city
		}
		set_state_category = metropolis
		effect_tooltip = {
			add_extra_state_shared_building_slots = 4
		}
	}

	else_if = {
		limit = {
			has_state_category = metropolis
		} 
		set_state_category = megalopolis
		effect_tooltip = {
			add_extra_state_shared_building_slots = 2
		}
	}
}

add_potential_special_forces_tree = {
	custom_effect_tooltip = add_potential_special_forces_tree_tt
	if = {
		limit = { NOT = { has_variable = sf_trees } }
		set_variable = { sf_trees = 2 }
	}
	else = {
		add_to_variable = { sf_trees = 1 }
	}
}

remove_potential_special_forces_tree = {
	if = {
		limit = { NOT = { has_variable = sf_trees } }
		set_variable = { sf_trees = 0 }
	}
	else = {
		subtract_from_variable = { sf_trees = 1 }
	}
}

store_core_states_on_game_start = { #Should be called from history file
	every_core_state = {
		ROOT = {
			add_to_array = {
				array = core_states_at_game_start
				value = PREV
			}
		}
	}
}